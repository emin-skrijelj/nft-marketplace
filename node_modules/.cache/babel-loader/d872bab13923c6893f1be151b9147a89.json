{"ast":null,"code":"var _jsxFileName = \"/home/legasi/nft-marketplace/src/frontend/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navigation from './Navbar';\nimport Home from './Home.js';\nimport Create from './Create.js';\nimport MyListedItems from './MyListedItems.js';\nimport MyPurchases from './MyPurchases.js';\nimport MarketplaceAbi from '../contractsData/Marketplace.json';\nimport MarketplaceAddress from '../contractsData/Marketplace-address.json';\nimport NFTAbi from '../contractsData/NFT.json';\nimport NFTAddress from '../contractsData/NFT-address.json';\nimport { useState } from 'react';\nimport { ethers } from \"ethers\";\nimport { Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [account, setAccount] = useState(null);\n  const [nft, setNFT] = useState({});\n  const [marketplace, setMarketplace] = useState({}); // MetaMask Login/Connect\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    setAccount(accounts[0]); // Get provider from Metamask\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // Set signer\n\n    const signer = provider.getSigner();\n    window.ethereum.on('chainChanged', chainId => {\n      window.location.reload();\n    });\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0]);\n      await web3Handler();\n    });\n    loadContracts(signer);\n  };\n\n  const loadContracts = async signer => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, signer);\n    setMarketplace(marketplace);\n    const nft = new ethers.Contract(NFTAddress.address, NFTAbi.abi, signer);\n    setNFT(nft);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Navigation, {\n          web3Handler: web3Handler,\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            minHeight: '80vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            style: {\n              display: 'flex'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mx-3 my-0\",\n            children: \"Awaiting Metamask Connection...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {\n              marketplace: marketplace,\n              nft: nft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/create\",\n            element: /*#__PURE__*/_jsxDEV(Create, {\n              marketplace: marketplace,\n              nft: nft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/my-listed-items\",\n            element: /*#__PURE__*/_jsxDEV(MyListedItems, {\n              marketplace: marketplace,\n              nft: nft,\n              account: account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/my-purchases\",\n            element: /*#__PURE__*/_jsxDEV(MyPurchases, {\n              marketplace: marketplace,\n              nft: nft,\n              account: account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"X29np9vsVrEJxqb623/r0uMoOl8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/legasi/nft-marketplace/src/frontend/components/App.js"],"names":["BrowserRouter","Routes","Route","Navigation","Home","Create","MyListedItems","MyPurchases","MarketplaceAbi","MarketplaceAddress","NFTAbi","NFTAddress","useState","ethers","Spinner","App","loading","setLoading","account","setAccount","nft","setNFT","marketplace","setMarketplace","web3Handler","accounts","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","on","chainId","location","reload","loadContracts","Contract","address","abi","display","justifyContent","alignItems","minHeight"],"mappings":"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","sourcesContent":["import {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Navigation from './Navbar';\nimport Home from './Home.js'\nimport Create from './Create.js'\nimport MyListedItems from './MyListedItems.js'\nimport MyPurchases from './MyPurchases.js'\nimport MarketplaceAbi from '../contractsData/Marketplace.json'\nimport MarketplaceAddress from '../contractsData/Marketplace-address.json'\nimport NFTAbi from '../contractsData/NFT.json'\nimport NFTAddress from '../contractsData/NFT-address.json'\nimport { useState } from 'react'\nimport { ethers } from \"ethers\"\nimport { Spinner } from 'react-bootstrap'\n\nimport './App.css';\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [account, setAccount] = useState(null)\n  const [nft, setNFT] = useState({})\n  const [marketplace, setMarketplace] = useState({})\n  // MetaMask Login/Connect\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Set signer\n    const signer = provider.getSigner()\n\n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n    })\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0])\n      await web3Handler()\n    })\n    loadContracts(signer)\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, signer)\n    setMarketplace(marketplace)\n    const nft = new ethers.Contract(NFTAddress.address, NFTAbi.abi, signer)\n    setNFT(nft)\n    setLoading(false)\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <>\n          <Navigation web3Handler={web3Handler} account={account} />\n        </>\n        <div>\n          {loading ? (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh' }}>\n              <Spinner animation=\"border\" style={{ display: 'flex' }} />\n              <p className='mx-3 my-0'>Awaiting Metamask Connection...</p>\n            </div>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={\n                <Home marketplace={marketplace} nft={nft} />\n              } />\n              <Route path=\"/create\" element={\n                <Create marketplace={marketplace} nft={nft} />\n              } />\n              <Route path=\"/my-listed-items\" element={\n                <MyListedItems marketplace={marketplace} nft={nft} account={account} />\n              } />\n              <Route path=\"/my-purchases\" element={\n                <MyPurchases marketplace={marketplace} nft={nft} account={account} />\n              } />\n            </Routes>\n          )}\n        </div>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}