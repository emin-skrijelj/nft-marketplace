{"ast":null,"code":"/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n\n  if (typeof mode === 'string') {\n    return mode;\n  }\n\n  return mode.toString(8).padStart(4, '0');\n}","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-core-utils/src/mode-to-string.js"],"names":["modeToString","mode","undefined","toString","padStart"],"mappings":"AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAuBC,IAAvB,EAA6B;AAClC,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAOC,SAAP;AACD;;AAED,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AAED,SAAOA,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAP;AACD","sourcesContent":["\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n"]},"metadata":{},"sourceType":"module"}