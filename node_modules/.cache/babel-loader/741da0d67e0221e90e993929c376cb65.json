{"ast":null,"code":"/* eslint-env browser */\nimport { Client } from './core.js'; // Set default configuration and call create function with them\n\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\n\nexport const configure = fn => {\n  return options => {\n    return fn(new Client(options), options);\n  };\n};","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/lib/configure.js"],"names":["Client","configure","fn","options"],"mappings":"AACA;AAEA,SAASA,MAAT,QAAuB,WAAvB,C,CAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAAQ;AAC/B,SAAQC,OAAD,IAAa;AAClB,WAAOD,EAAE,CAAC,IAAIF,MAAJ,CAAWG,OAAX,CAAD,EAAsBA,OAAtB,CAAT;AACD,GAFD;AAGD,CAJM","sourcesContent":["\n/* eslint-env browser */\n\nimport { Client } from './core.js'\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}