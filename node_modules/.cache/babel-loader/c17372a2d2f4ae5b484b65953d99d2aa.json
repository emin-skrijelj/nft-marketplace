{"ast":null,"code":"var _jsxFileName = \"/home/legasi/nft-marketplace/src/frontend/components/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navigation from './Navbar';\nimport { useState } from 'react';\nimport { ethers } from \"ethers\";\nimport MarketplaceAbi from '../contractsData/Marketplace.json';\nimport MarketplaceAddress from '../contractsData/Marketplace-address.json';\nimport NFTAbi from '../contractsData/NFT.json';\nimport NFTAddress from '../contractsData/NFT-address.json'; // import Home from './Home.js'\n// import Create from './Create.js'\n// import MyListedItems from './MyListedItems.js'\n// import MyPurchases from './MyPurchases.js'\n\nimport { Spinner } from 'react-bootstrap';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [account, setAccount] = useState(null);\n  const [nft, setNFT] = useState({});\n  const [marketplace, setMarketplace] = useState({});\n\n  const web3Handler = async () => {\n    const accounts = await window.etherum.request({\n      method: 'eth_requestAccounts'\n    });\n    setAccount(accounts[0]);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    loadContracts(signer);\n  };\n\n  const loadContracts = async signer => {\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, signer);\n    setMarketplace(marketplace);\n    const nft = new ethers.Contract(NFTAddress.address, NFTAbi.abi, signer);\n    setNFT(nft);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Navigation, {\n          web3Handler: web3Handler,\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            minHeight: '80vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            style: {\n              display: 'flex'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mx-3 my-0\",\n            children: \"Awaiting Metamask Connection...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {\n              marketplace: marketplace,\n              nft: nft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/create\",\n            element: /*#__PURE__*/_jsxDEV(Create, {\n              marketplace: marketplace,\n              nft: nft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/my-listed-items\",\n            element: /*#__PURE__*/_jsxDEV(MyListedItems, {\n              marketplace: marketplace,\n              nft: nft,\n              account: account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/my-purchases\",\n            element: /*#__PURE__*/_jsxDEV(MyPurchases, {\n              marketplace: marketplace,\n              nft: nft,\n              account: account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"X29np9vsVrEJxqb623/r0uMoOl8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/legasi/nft-marketplace/src/frontend/components/App.js"],"names":["Navigation","useState","ethers","MarketplaceAbi","MarketplaceAddress","NFTAbi","NFTAddress","Spinner","BrowserRouter","Routes","Route","App","loading","setLoading","account","setAccount","nft","setNFT","marketplace","setMarketplace","web3Handler","accounts","window","etherum","request","method","provider","providers","Web3Provider","ethereum","signer","getSigner","loadContracts","Contract","address","abi","display","justifyContent","alignItems","minHeight"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport Navigation from './Navbar';\nimport { useState } from 'react'\nimport { ethers } from \"ethers\"\nimport MarketplaceAbi from '../contractsData/Marketplace.json'\nimport MarketplaceAddress from '../contractsData/Marketplace-address.json'\nimport NFTAbi from '../contractsData/NFT.json'\nimport NFTAddress from '../contractsData/NFT-address.json'\n// import Home from './Home.js'\n// import Create from './Create.js'\n// import MyListedItems from './MyListedItems.js'\n// import MyPurchases from './MyPurchases.js'\nimport { Spinner } from 'react-bootstrap'\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true)  \n  const [account, setAccount] = useState(null)\n  const [nft, setNFT] = useState({})\n  const [marketplace, setMarketplace] = useState({})\n\n  const web3Handler = async () => {\n    const accounts = await window.etherum.request({method: 'eth_requestAccounts'});\n    setAccount(accounts[0])\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    loadContracts(signer)\n  }\n  const loadContracts = async (signer) => {\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, signer)\n    setMarketplace(marketplace)\n    const nft = new ethers.Contract(NFTAddress.address, NFTAbi.abi, signer)\n    setNFT(nft)\n    setLoading(false)\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <>\n          <Navigation web3Handler={web3Handler} account={account} />\n        </>\n        <div>\n          {loading ? (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh' }}>\n              <Spinner animation=\"border\" style={{ display: 'flex' }} />\n              <p className='mx-3 my-0'>Awaiting Metamask Connection...</p>\n            </div>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={\n                <Home marketplace={marketplace} nft={nft} />\n              } />\n              <Route path=\"/create\" element={\n                <Create marketplace={marketplace} nft={nft} />\n              } />\n              <Route path=\"/my-listed-items\" element={\n                <MyListedItems marketplace={marketplace} nft={nft} account={account} />\n              } />\n              <Route path=\"/my-purchases\" element={\n                <MyPurchases marketplace={marketplace} nft={nft} account={account} />\n              } />\n            </Routes>\n          )}\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}