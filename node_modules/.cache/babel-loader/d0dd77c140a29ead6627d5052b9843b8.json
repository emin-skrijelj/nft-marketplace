{"ast":null,"code":"import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createCancel = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel(name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    }); // @ts-expect-error server output is not typed\n\n    return objectToCamel(await res.json());\n  }\n\n  return cancel;\n});","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/name/pubsub/cancel.js"],"names":["objectToCamel","configure","toUrlSearchParams","createCancel","api","cancel","name","options","res","post","signal","searchParams","arg","headers","json"],"mappings":"AAAA,SAASA,aAAT,QAA8B,8BAA9B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGF,SAAS,CAACG,GAAG,IAAI;AAC3C;AACF;AACA;AACE,iBAAeC,MAAf,CAAuBC,IAAvB,EAA2C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACzC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,oBAAT,EAA+B;AAC/CC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MAD+B;AAE/CC,MAAAA,YAAY,EAAET,iBAAiB,CAAC;AAC9BU,QAAAA,GAAG,EAAEN,IADyB;AAE9B,WAAGC;AAF2B,OAAD,CAFgB;AAM/CM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AAN8B,KAA/B,CAAlB,CADyC,CAUzC;;AACA,WAAOb,aAAa,CAAC,MAAMQ,GAAG,CAACM,IAAJ,EAAP,CAApB;AACD;;AACD,SAAOT,MAAP;AACD,CAlBoC,CAA9B","sourcesContent":["import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createCancel = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return cancel\n})\n"]},"metadata":{},"sourceType":"module"}