{"ast":null,"code":"\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function () {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar globalObject = getGlobal();\nmodule.exports = exports = globalObject.fetch; // Needed for TypeScript and Webpack.\n\nif (globalObject.fetch) {\n  exports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/node-fetch/browser.js"],"names":["getGlobal","self","window","global","Error","globalObject","module","exports","fetch","default","bind","Headers","Request","Response"],"mappings":"AAAA,a,CAEA;;AACA,IAAIA,SAAS,GAAG,YAAY;AAC3B;AACA;AACA;AACA,MAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAAE,WAAOA,IAAP;AAAc;;AACjD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAAE,WAAOA,MAAP;AAAgB;;AACrD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAAE,WAAOA,MAAP;AAAgB;;AACrD,QAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACA,CARD;;AAUA,IAAIC,YAAY,GAAGL,SAAS,EAA5B;AAEAM,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGF,YAAY,CAACG,KAAxC,C,CAEA;;AACA,IAAIH,YAAY,CAACG,KAAjB,EAAwB;AACvBD,EAAAA,OAAO,CAACE,OAAR,GAAkBJ,YAAY,CAACG,KAAb,CAAmBE,IAAnB,CAAwBL,YAAxB,CAAlB;AACA;;AAEDE,OAAO,CAACI,OAAR,GAAkBN,YAAY,CAACM,OAA/B;AACAJ,OAAO,CAACK,OAAR,GAAkBP,YAAY,CAACO,OAA/B;AACAL,OAAO,CAACM,QAAR,GAAmBR,YAAY,CAACQ,QAAhC","sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"]},"metadata":{},"sourceType":"script"}