{"ast":null,"code":"import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from '../lib/configure.js';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\n\nexport function createAdd(config) {\n  const all = createAddAll(config);\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add(path) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options));\n    }\n\n    return add;\n  })(config);\n}","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/pin/add.js"],"names":["createAddAll","last","configure","createAdd","config","all","add","path","options"],"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAoBC,MAApB,EAA4B;AACjC,QAAMC,GAAG,GAAGL,YAAY,CAACI,MAAD,CAAxB;AAEA,SAAOF,SAAS,CAAC,MAAM;AACrB;AACJ;AACA;AACI,mBAAeI,GAAf,CAAoBC,IAApB,EAAwC;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AACtC;AACA,aAAOP,IAAI,CAACI,GAAG,CAAC,CAAC;AACfE,QAAAA,IADe;AAEf,WAAGC;AAFY,OAAD,CAAD,EAGXA,OAHW,CAAJ,CAAX;AAID;;AACD,WAAOF,GAAP;AACD,GAZe,CAAT,CAYJF,MAZI,CAAP;AAaD","sourcesContent":["import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createAdd (config) {\n  const all = createAddAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return add\n  })(config)\n}\n"]},"metadata":{},"sourceType":"module"}