{"ast":null,"code":"const typeofs = ['string', 'number', 'bigint', 'symbol'];\nconst objectTypeNames = ['Function', 'Generator', 'AsyncGenerator', 'GeneratorFunction', 'AsyncGeneratorFunction', 'AsyncFunction', 'Observable', 'Array', 'Buffer', 'Object', 'RegExp', 'Date', 'Error', 'Map', 'Set', 'WeakMap', 'WeakSet', 'ArrayBuffer', 'SharedArrayBuffer', 'DataView', 'Promise', 'URL', 'HTMLElement', 'Int8Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array', 'Float32Array', 'Float64Array', 'BigInt64Array', 'BigUint64Array'];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (value === undefined) {\n    return 'undefined';\n  }\n\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n\n  const typeOf = typeof value;\n\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n\n  const objectType = getObjectType(value);\n\n  if (objectType) {\n    return objectType;\n  }\n\n  return 'Object';\n}\n\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\n\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/cborg/esm/lib/is.js"],"names":["typeofs","objectTypeNames","is","value","undefined","typeOf","includes","Array","isArray","isBuffer","objectType","getObjectType","constructor","call","objectTypeName","Object","prototype","toString","slice"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CACd,QADc,EAEd,QAFc,EAGd,QAHc,EAId,QAJc,CAAhB;AAMA,MAAMC,eAAe,GAAG,CACtB,UADsB,EAEtB,WAFsB,EAGtB,gBAHsB,EAItB,mBAJsB,EAKtB,wBALsB,EAMtB,eANsB,EAOtB,YAPsB,EAQtB,OARsB,EAStB,QATsB,EAUtB,QAVsB,EAWtB,QAXsB,EAYtB,MAZsB,EAatB,OAbsB,EActB,KAdsB,EAetB,KAfsB,EAgBtB,SAhBsB,EAiBtB,SAjBsB,EAkBtB,aAlBsB,EAmBtB,mBAnBsB,EAoBtB,UApBsB,EAqBtB,SArBsB,EAsBtB,KAtBsB,EAuBtB,aAvBsB,EAwBtB,WAxBsB,EAyBtB,YAzBsB,EA0BtB,mBA1BsB,EA2BtB,YA3BsB,EA4BtB,aA5BsB,EA6BtB,YA7BsB,EA8BtB,aA9BsB,EA+BtB,cA/BsB,EAgCtB,cAhCsB,EAiCtB,eAjCsB,EAkCtB,gBAlCsB,CAAxB;AAoCA,OAAO,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AACxB,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,MAAP;AACD;;AACD,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvB,WAAO,WAAP;AACD;;AACD,MAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAhC,EAAuC;AACrC,WAAO,SAAP;AACD;;AACD,QAAME,MAAM,GAAG,OAAOF,KAAtB;;AACA,MAAIH,OAAO,CAACM,QAAR,CAAiBD,MAAjB,CAAJ,EAA8B;AAC5B,WAAOA,MAAP;AACD;;AACD,MAAIA,MAAM,KAAK,UAAf,EAA2B;AACzB,WAAO,UAAP;AACD;;AACD,MAAIE,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;AACxB,WAAO,OAAP;AACD;;AACD,MAAIM,QAAQ,CAACN,KAAD,CAAZ,EAAqB;AACnB,WAAO,QAAP;AACD;;AACD,QAAMO,UAAU,GAAGC,aAAa,CAACR,KAAD,CAAhC;;AACA,MAAIO,UAAJ,EAAgB;AACd,WAAOA,UAAP;AACD;;AACD,SAAO,QAAP;AACD;;AACD,SAASD,QAAT,CAAkBN,KAAlB,EAAyB;AACvB,SAAOA,KAAK,IAAIA,KAAK,CAACS,WAAf,IAA8BT,KAAK,CAACS,WAAN,CAAkBH,QAAhD,IAA4DN,KAAK,CAACS,WAAN,CAAkBH,QAAlB,CAA2BI,IAA3B,CAAgC,IAAhC,EAAsCV,KAAtC,CAAnE;AACD;;AACD,SAASQ,aAAT,CAAuBR,KAAvB,EAA8B;AAC5B,QAAMW,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BJ,IAA1B,CAA+BV,KAA/B,EAAsCe,KAAtC,CAA4C,CAA5C,EAA+C,CAAC,CAAhD,CAAvB;;AACA,MAAIjB,eAAe,CAACK,QAAhB,CAAyBQ,cAAzB,CAAJ,EAA8C;AAC5C,WAAOA,cAAP;AACD;;AACD,SAAOV,SAAP;AACD","sourcesContent":["const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}"]},"metadata":{},"sourceType":"module"}