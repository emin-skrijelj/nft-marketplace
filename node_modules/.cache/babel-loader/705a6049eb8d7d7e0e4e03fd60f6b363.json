{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod(path, mode) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n\n  return chmod;\n});","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/files/chmod.js"],"names":["configure","toUrlSearchParams","createChmod","api","chmod","path","mode","options","res","post","signal","searchParams","arg","headers","text"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAACG,GAAG,IAAI;AAC1C;AACF;AACA;AACE,iBAAeC,KAAf,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAgD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC9C,UAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADwB;AAExCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEP,IADyB;AAE9BC,QAAAA,IAF8B;AAG9B,WAAGC;AAH2B,OAAD,CAFS;AAOxCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AAPuB,KAAxB,CAAlB;AAUA,UAAML,GAAG,CAACM,IAAJ,EAAN;AACD;;AACD,SAAOV,KAAP;AACD,CAlBmC,CAA7B","sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod (path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return chmod\n})\n"]},"metadata":{},"sourceType":"module"}