{"ast":null,"code":"const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\n\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`);\n  }\n}\n\nexport { decodeErrPrefix, encodeErrPrefix, uintMinorPrefixBytes, assertEnoughData };","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/cborg/esm/lib/common.js"],"names":["decodeErrPrefix","encodeErrPrefix","uintMinorPrefixBytes","assertEnoughData","data","pos","need","length","Error"],"mappings":"AAAA,MAAMA,eAAe,GAAG,oBAAxB;AACA,MAAMC,eAAe,GAAG,oBAAxB;AACA,MAAMC,oBAAoB,GAAG,EAA7B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;;AACA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;AACzC,MAAIF,IAAI,CAACG,MAAL,GAAcF,GAAd,GAAoBC,IAAxB,EAA8B;AAC5B,UAAM,IAAIE,KAAJ,CAAW,GAAGR,eAAiB,2BAA/B,CAAN;AACD;AACF;;AACD,SACEA,eADF,EAEEC,eAFF,EAGEC,oBAHF,EAIEC,gBAJF","sourcesContent":["const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};"]},"metadata":{},"sourceType":"module"}