{"ast":null,"code":"import { encodeQuery, decodePin } from './utils.js';\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\n\nexport function createLs(client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function* ls(_ref) {\n    let {\n      timeout,\n      signal,\n      headers,\n      ...query\n    } = _ref;\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    });\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin);\n    }\n  }\n\n  return ls;\n}","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/pin/remote/ls.js"],"names":["encodeQuery","decodePin","createLs","client","ls","timeout","signal","headers","query","response","post","searchParams","pin","ndjson"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,YAAvC;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAmBC,MAAnB,EAA2B;AAChC;AACF;AACA;AACE,kBAAiBC,EAAjB,OAA6D;AAAA,QAAxC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA,OAAnB;AAA4B,SAAGC;AAA/B,KAAwC;AAC3D,UAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,IAAP,CAAY,eAAZ,EAA6B;AAClDL,MAAAA,OADkD;AAElDC,MAAAA,MAFkD;AAGlDC,MAAAA,OAHkD;AAIlDI,MAAAA,YAAY,EAAEX,WAAW,CAACQ,KAAD;AAJyB,KAA7B,CAAvB;;AAOA,eAAW,MAAMI,GAAjB,IAAwBH,QAAQ,CAACI,MAAT,EAAxB,EAA2C;AACzC,YAAMZ,SAAS,CAACW,GAAD,CAAf;AACD;AACF;;AAED,SAAOR,EAAP;AACD","sourcesContent":["import { encodeQuery, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function * ls ({ timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    })\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin)\n    }\n  }\n\n  return ls\n}\n"]},"metadata":{},"sourceType":"module"}