{"ast":null,"code":"import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\n\nexport function createRm(client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm(name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    });\n  }\n\n  return rm;\n}","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/pin/remote/service/rm.js"],"names":["toUrlSearchParams","createRm","client","rm","name","options","post","signal","headers","searchParams","arg"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sCAAlC;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAmBC,MAAnB,EAA2B;AAChC;AACF;AACA;AACE,iBAAeC,EAAf,CAAmBC,IAAnB,EAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrC,UAAMH,MAAM,CAACI,IAAP,CAAY,uBAAZ,EAAqC;AACzCC,MAAAA,MAAM,EAAEF,OAAO,CAACE,MADyB;AAEzCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAFwB;AAGzCC,MAAAA,YAAY,EAAET,iBAAiB,CAAC;AAC9BU,QAAAA,GAAG,EAAEN;AADyB,OAAD;AAHU,KAArC,CAAN;AAOD;;AAED,SAAOD,EAAP;AACD","sourcesContent":["import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    })\n  }\n\n  return rm\n}\n"]},"metadata":{},"sourceType":"module"}