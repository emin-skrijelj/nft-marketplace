{"ast":null,"code":"import { Token, Type } from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\n\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`);\n}\n\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${decodeErrPrefix} ${msg}`);\n  };\n}\n\nexport const jump = [];\n\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\n\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\n\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\n\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\n\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\n\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\n\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\n\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\n\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\n\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\n\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\n\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\n\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\n\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\n\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\n\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\n\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\n\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\n\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n    case Type.false:\n      return fromArray([244]);\n\n    case Type.true:\n      return fromArray([245]);\n\n    case Type.null:\n      return fromArray([246]);\n\n    case Type.bytes:\n      if (!token.value.length) {\n        return fromArray([64]);\n      }\n\n      return;\n\n    case Type.string:\n      if (token.value === '') {\n        return fromArray([96]);\n      }\n\n      return;\n\n    case Type.array:\n      if (token.value === 0) {\n        return fromArray([128]);\n      }\n\n      return;\n\n    case Type.map:\n      if (token.value === 0) {\n        return fromArray([160]);\n      }\n\n      return;\n\n    case Type.uint:\n      if (token.value < 24) {\n        return fromArray([Number(token.value)]);\n      }\n\n      return;\n\n    case Type.negint:\n      if (token.value >= -24) {\n        return fromArray([31 - Number(token.value)]);\n      }\n\n  }\n}","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/cborg/esm/lib/jump.js"],"names":["Token","Type","uint","negint","bytes","string","array","map","tag","float","decodeErrPrefix","fromArray","invalidMinor","data","pos","minor","Error","errorer","msg","jump","i","decodeUint8","decodeUint16","decodeUint32","decodeUint64","decodeNegint8","decodeNegint16","decodeNegint32","decodeNegint64","decodeBytesCompact","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","decodeUndefined","decodeFloat16","decodeFloat32","decodeFloat64","decodeBreak","quick","Uint8Array","false","true","null","quickEncodeToken","token","type","value","length","Number"],"mappings":"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","sourcesContent":["import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}