{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return res.Version;\n  }\n\n  return version;\n});","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/repo/version.js"],"names":["configure","toUrlSearchParams","createVersion","api","version","options","res","post","signal","searchParams","headers","json","Version"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,IAAI;AAC5C;AACF;AACA;AACE,iBAAeC,OAAf,GAAsC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACpC,UAAMC,GAAG,GAAG,MAAM,CAAC,MAAMH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;AAChDC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADgC;AAEhDC,MAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAFiB;AAGhDK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAH+B,KAAzB,CAAP,EAIdC,IAJc,EAAlB;AAMA,WAAOL,GAAG,CAACM,OAAX;AACD;;AACD,SAAOR,OAAP;AACD,CAdqC,CAA/B","sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n"]},"metadata":{},"sourceType":"module"}