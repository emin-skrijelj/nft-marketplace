{"ast":null,"code":"class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n\n  toString() {\n    return `Type[${this.major}].${this.name}`;\n  }\n\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n\n}\n\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\n\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n\n  toString() {\n    return `Token[${this.type}].${this.value}`;\n  }\n\n}\n\nexport { Type, Token };","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/cborg/esm/lib/token.js"],"names":["Type","constructor","major","name","terminal","majorEncoded","toString","compare","typ","uint","negint","bytes","string","array","map","tag","float","false","true","null","undefined","break","Token","type","value","encodedLength","encodedBytes","byteValue"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAAwB;AACjC,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKG,YAAL,GAAoBH,KAAK,IAAI,CAA7B;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AACDE,EAAAA,QAAQ,GAAG;AACT,WAAQ,QAAQ,KAAKJ,KAAO,KAAK,KAAKC,IAAM,EAA5C;AACD;;AACDI,EAAAA,OAAO,CAACC,GAAD,EAAM;AACX,WAAO,KAAKN,KAAL,GAAaM,GAAG,CAACN,KAAjB,GAAyB,CAAC,CAA1B,GAA8B,KAAKA,KAAL,GAAaM,GAAG,CAACN,KAAjB,GAAyB,CAAzB,GAA6B,CAAlE;AACD;;AAZQ;;AAcXF,IAAI,CAACS,IAAL,GAAY,IAAIT,IAAJ,CAAS,CAAT,EAAY,MAAZ,EAAoB,IAApB,CAAZ;AACAA,IAAI,CAACU,MAAL,GAAc,IAAIV,IAAJ,CAAS,CAAT,EAAY,QAAZ,EAAsB,IAAtB,CAAd;AACAA,IAAI,CAACW,KAAL,GAAa,IAAIX,IAAJ,CAAS,CAAT,EAAY,OAAZ,EAAqB,IAArB,CAAb;AACAA,IAAI,CAACY,MAAL,GAAc,IAAIZ,IAAJ,CAAS,CAAT,EAAY,QAAZ,EAAsB,IAAtB,CAAd;AACAA,IAAI,CAACa,KAAL,GAAa,IAAIb,IAAJ,CAAS,CAAT,EAAY,OAAZ,EAAqB,KAArB,CAAb;AACAA,IAAI,CAACc,GAAL,GAAW,IAAId,IAAJ,CAAS,CAAT,EAAY,KAAZ,EAAmB,KAAnB,CAAX;AACAA,IAAI,CAACe,GAAL,GAAW,IAAIf,IAAJ,CAAS,CAAT,EAAY,KAAZ,EAAmB,KAAnB,CAAX;AACAA,IAAI,CAACgB,KAAL,GAAa,IAAIhB,IAAJ,CAAS,CAAT,EAAY,OAAZ,EAAqB,IAArB,CAAb;AACAA,IAAI,CAACiB,KAAL,GAAa,IAAIjB,IAAJ,CAAS,CAAT,EAAY,OAAZ,EAAqB,IAArB,CAAb;AACAA,IAAI,CAACkB,IAAL,GAAY,IAAIlB,IAAJ,CAAS,CAAT,EAAY,MAAZ,EAAoB,IAApB,CAAZ;AACAA,IAAI,CAACmB,IAAL,GAAY,IAAInB,IAAJ,CAAS,CAAT,EAAY,MAAZ,EAAoB,IAApB,CAAZ;AACAA,IAAI,CAACoB,SAAL,GAAiB,IAAIpB,IAAJ,CAAS,CAAT,EAAY,WAAZ,EAAyB,IAAzB,CAAjB;AACAA,IAAI,CAACqB,KAAL,GAAa,IAAIrB,IAAJ,CAAS,CAAT,EAAY,OAAZ,EAAqB,IAArB,CAAb;;AACA,MAAMsB,KAAN,CAAY;AACVrB,EAAAA,WAAW,CAACsB,IAAD,EAAOC,KAAP,EAAcC,aAAd,EAA6B;AACtC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,YAAL,GAAoBN,SAApB;AACA,SAAKO,SAAL,GAAiBP,SAAjB;AACD;;AACDd,EAAAA,QAAQ,GAAG;AACT,WAAQ,SAAS,KAAKiB,IAAM,KAAK,KAAKC,KAAO,EAA7C;AACD;;AAVS;;AAYZ,SACExB,IADF,EAEEsB,KAFF","sourcesContent":["class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};"]},"metadata":{},"sourceType":"module"}