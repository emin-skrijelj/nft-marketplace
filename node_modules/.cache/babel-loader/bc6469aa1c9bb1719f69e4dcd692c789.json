{"ast":null,"code":"'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n\n  while (j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  }\n\n  ;\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while (true) {\n    var l = _l;\n    var acc = _acc;\n\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue;\n    } else {\n      return acc;\n    }\n  }\n\n  ;\n}\n\nfunction fill(arr, _i, _l) {\n  while (true) {\n    var l = _l;\n    var i = _i;\n\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n\n      while (j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      }\n\n      ;\n      _l = l[1];\n      _i = k;\n      continue;\n    } else {\n      return (\n        /* () */\n        0\n      );\n    }\n  }\n\n  ;\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"index out of bounds\"];\n  } else {\n    xs[index] = newval;\n    return (\n      /* () */\n      0\n    );\n  }\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"index out of bounds\"];\n  } else {\n    return xs[index];\n  }\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n\n  for (var i = 0, i_finish = len - 1 | 0; i <= i_finish; ++i) {\n    b[i] = init;\n  }\n\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n\n  for (var i = 0, i_finish = len - 1 | 0; i <= i_finish; ++i) {\n    b[i] = 0;\n  }\n\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for (var j = 0, j_finish = len - 1 | 0; j <= j_finish; ++j) {\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n\n    return (\n      /* () */\n      0\n    );\n  } else {\n    for (var j$1 = len - 1 | 0; j$1 >= 0; --j$1) {\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n\n    return (\n      /* () */\n      0\n    );\n  }\n}\n\nfunction caml_array_dup(prim) {\n  return prim.slice(0);\n}\n\nexports.caml_array_dup = caml_array_dup;\nexports.caml_array_sub = caml_array_sub;\nexports.caml_array_concat = caml_array_concat;\nexports.caml_make_vect = caml_make_vect;\nexports.caml_make_float_vect = caml_make_float_vect;\nexports.caml_array_blit = caml_array_blit;\nexports.caml_array_get = caml_array_get;\nexports.caml_array_set = caml_array_set;\n/* No side effect */","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/bs-platform/lib/js/caml_array.js"],"names":["Caml_builtin_exceptions","require","caml_array_sub","x","offset","len","result","Array","j","i","_acc","_l","l","acc","length","fill","arr","_i","l$1","k","caml_array_concat","v","caml_array_set","xs","index","newval","invalid_argument","caml_array_get","caml_make_vect","init","b","i_finish","caml_make_float_vect","caml_array_blit","a1","i1","a2","i2","j_finish","j$1","caml_array_dup","prim","slice","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n  while(j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  };\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while(true) {\n    var l = _l;\n    var acc = _acc;\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue ;\n    } else {\n      return acc;\n    }\n  };\n}\n\nfunction fill(arr, _i, _l) {\n  while(true) {\n    var l = _l;\n    var i = _i;\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n      while(j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      };\n      _l = l[1];\n      _i = k;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    xs[index] = newval;\n    return /* () */0;\n  }\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return xs[index];\n  }\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = init;\n  }\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = 0;\n  }\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction caml_array_dup(prim) {\n  return prim.slice(0);\n}\n\nexports.caml_array_dup = caml_array_dup;\nexports.caml_array_sub = caml_array_sub;\nexports.caml_array_concat = caml_array_concat;\nexports.caml_make_vect = caml_make_vect;\nexports.caml_make_float_vect = caml_make_float_vect;\nexports.caml_array_blit = caml_array_blit;\nexports.caml_array_get = caml_array_get;\nexports.caml_array_set = caml_array_set;\n/* No side effect */\n"]},"metadata":{},"sourceType":"script"}