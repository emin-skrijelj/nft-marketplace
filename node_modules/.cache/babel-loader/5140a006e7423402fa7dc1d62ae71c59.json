{"ast":null,"code":"import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.map((\n    /** @type {Record<string, any>} */\n    profile) => objectToCamel(profile));\n  }\n\n  return list;\n});","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/config/profiles/list.js"],"names":["objectToCamel","configure","toUrlSearchParams","createList","api","list","options","res","post","signal","searchParams","headers","data","json","map","profile"],"mappings":"AAAA,SAASA,aAAT,QAA8B,8BAA9B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;AACzC;AACF;AACA;AACE,iBAAeC,IAAf,GAAmC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACjC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,qBAAT,EAAgC;AAChDC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADgC;AAEhDC,MAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAFiB;AAGhDK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAH+B,KAAhC,CAAlB;AAMA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AAEA,WAAOD,IAAI,CAACE,GAAL,CAAS;AAAC;AAAmCC,IAAAA,OAApC,KAAgDf,aAAa,CAACe,OAAD,CAAtE,CAAP;AACD;;AACD,SAAOV,IAAP;AACD,CAhBkC,CAA5B","sourcesContent":["import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => objectToCamel(profile))\n  }\n  return list\n})\n"]},"metadata":{},"sourceType":"module"}