{"ast":null,"code":"// @ts-check\nimport { coerce } from '../bytes.js';\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw';\nexport const code = 0x55;\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\n\nexport const encode = node => coerce(node);\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\n\nexport const decode = data => coerce(data);","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/multiformats/src/codecs/raw.js"],"names":["coerce","name","code","encode","node","decode","data"],"mappings":"AAAA;AAEA,SAASA,MAAT,QAAuB,aAAvB;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAG,KAAb;AACP,OAAO,MAAMC,IAAI,GAAG,IAAb;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAUJ,MAAM,CAACI,IAAD,CAA/B;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAUN,MAAM,CAACM,IAAD,CAA/B","sourcesContent":["// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n"]},"metadata":{},"sourceType":"module"}