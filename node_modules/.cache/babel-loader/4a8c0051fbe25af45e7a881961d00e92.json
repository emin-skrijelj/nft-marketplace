{"ast":null,"code":"import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createDns = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async function (domain) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Path;\n  };\n\n  return dns;\n});","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/ipfs-http-client/src/dns.js"],"names":["configure","toUrlSearchParams","createDns","api","dns","domain","options","res","post","signal","searchParams","arg","headers","data","json","Path"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,IAAI;AACxC;AACF;AACA;AACE,QAAMC,GAAG,GAAG,gBAAOC,MAAP,EAAgC;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;AAC1C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,KAAT,EAAgB;AAChCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADgB;AAEhCC,MAAAA,YAAY,EAAET,iBAAiB,CAAC;AAC9BU,QAAAA,GAAG,EAAEN,MADyB;AAE9B,WAAGC;AAF2B,OAAD,CAFC;AAMhCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANe,KAAhB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;AAEA,WAAOD,IAAI,CAACE,IAAZ;AACD,GAZD;;AAcA,SAAOX,GAAP;AACD,CAnBiC,CAA3B","sourcesContent":["import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createDns = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n"]},"metadata":{},"sourceType":"module"}