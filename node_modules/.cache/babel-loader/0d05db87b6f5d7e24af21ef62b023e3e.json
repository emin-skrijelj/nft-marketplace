{"ast":null,"code":"let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig;\n/**\n * conversion ratios\n */\n\nparse.nanosecond = parse.ns = 1 / 1e6;\nparse['µs'] = parse['μs'] = parse.us = parse.microsecond = 1 / 1e3;\nparse.millisecond = parse.ms = parse[''] = 1;\nparse.second = parse.sec = parse.s = parse.ms * 1000;\nparse.minute = parse.min = parse.m = parse.s * 60;\nparse.hour = parse.hr = parse.h = parse.m * 60;\nparse.day = parse.d = parse.h * 24;\nparse.week = parse.wk = parse.w = parse.d * 7;\nparse.month = parse.b = parse.d * (365.25 / 12);\nparse.year = parse.yr = parse.y = parse.d * 365.25;\n/**\n * convert `str` to ms\n *\n * @param {String} str\n * @param {String} format\n * @return {Number}\n */\n\nfunction parse() {\n  let str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ms';\n  var result = null; // ignore commas/placeholders\n\n  str = (str + '').replace(/(\\d)[,_](\\d)/g, '$1$2');\n  var isNegative = str[0] === '-';\n  str.replace(durationRE, function (_, n, units) {\n    units = unitRatio(units);\n    if (units) result = (result || 0) + Math.abs(parseFloat(n, 10)) * units;\n  });\n  return result && result / (unitRatio(format) || 1) * (isNegative ? -1 : 1);\n}\n\nfunction unitRatio(str) {\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')];\n}\n\nexport default parse;","map":{"version":3,"sources":["/home/legasi/nft-marketplace/node_modules/parse-duration/index.mjs"],"names":["durationRE","parse","nanosecond","ns","us","microsecond","millisecond","ms","second","sec","s","minute","min","m","hour","hr","h","day","d","week","wk","w","month","b","year","yr","y","str","format","result","replace","isNegative","_","n","units","unitRatio","Math","abs","parseFloat","toLowerCase"],"mappings":"AAAA,IAAIA,UAAU,GAAG,2DAAjB;AAGA;AACA;AACA;;AAEAC,KAAK,CAACC,UAAN,GACAD,KAAK,CAACE,EAAN,GAAW,IAAI,GADf;AAGAF,KAAK,CAAC,IAAD,CAAL,GACAA,KAAK,CAAC,IAAD,CAAL,GACAA,KAAK,CAACG,EAAN,GACAH,KAAK,CAACI,WAAN,GAAoB,IAAI,GAHxB;AAKAJ,KAAK,CAACK,WAAN,GACAL,KAAK,CAACM,EAAN,GACAN,KAAK,CAAC,EAAD,CAAL,GAAY,CAFZ;AAIAA,KAAK,CAACO,MAAN,GACAP,KAAK,CAACQ,GAAN,GACAR,KAAK,CAACS,CAAN,GAAUT,KAAK,CAACM,EAAN,GAAW,IAFrB;AAIAN,KAAK,CAACU,MAAN,GACAV,KAAK,CAACW,GAAN,GACAX,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACS,CAAN,GAAU,EAFpB;AAIAT,KAAK,CAACa,IAAN,GACAb,KAAK,CAACc,EAAN,GACAd,KAAK,CAACe,CAAN,GAAUf,KAAK,CAACY,CAAN,GAAU,EAFpB;AAIAZ,KAAK,CAACgB,GAAN,GACAhB,KAAK,CAACiB,CAAN,GAAUjB,KAAK,CAACe,CAAN,GAAU,EADpB;AAGAf,KAAK,CAACkB,IAAN,GACAlB,KAAK,CAACmB,EAAN,GACAnB,KAAK,CAACoB,CAAN,GAAUpB,KAAK,CAACiB,CAAN,GAAU,CAFpB;AAIAjB,KAAK,CAACqB,KAAN,GACArB,KAAK,CAACsB,CAAN,GACAtB,KAAK,CAACiB,CAAN,IAAW,SAAS,EAApB,CAFA;AAIAjB,KAAK,CAACuB,IAAN,GACAvB,KAAK,CAACwB,EAAN,GACAxB,KAAK,CAACyB,CAAN,GAAUzB,KAAK,CAACiB,CAAN,GAAU,MAFpB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASjB,KAAT,GAAmC;AAAA,MAApB0B,GAAoB,uEAAhB,EAAgB;AAAA,MAAZC,MAAY,uEAAL,IAAK;AACjC,MAAIC,MAAM,GAAG,IAAb,CADiC,CAEjC;;AACAF,EAAAA,GAAG,GAAG,CAACA,GAAG,GAAC,EAAL,EAASG,OAAT,CAAiB,eAAjB,EAAkC,MAAlC,CAAN;AACA,MAAIC,UAAU,GAAGJ,GAAG,CAAC,CAAD,CAAH,KAAW,GAA5B;AACAA,EAAAA,GAAG,CAACG,OAAJ,CAAY9B,UAAZ,EAAwB,UAASgC,CAAT,EAAYC,CAAZ,EAAeC,KAAf,EAAqB;AAC3CA,IAAAA,KAAK,GAAGC,SAAS,CAACD,KAAD,CAAjB;AACA,QAAIA,KAAJ,EAAWL,MAAM,GAAG,CAACA,MAAM,IAAI,CAAX,IAAgBO,IAAI,CAACC,GAAL,CAASC,UAAU,CAACL,CAAD,EAAI,EAAJ,CAAnB,IAA8BC,KAAvD;AACZ,GAHD;AAKA,SAAOL,MAAM,IAAMA,MAAM,IAAIM,SAAS,CAACP,MAAD,CAAT,IAAqB,CAAzB,CAAP,IAAuCG,UAAU,GAAG,CAAC,CAAJ,GAAQ,CAAzD,CAAlB;AACD;;AAED,SAASI,SAAT,CAAmBR,GAAnB,EAAwB;AACtB,SAAO1B,KAAK,CAAC0B,GAAD,CAAL,IAAc1B,KAAK,CAAC0B,GAAG,CAACY,WAAJ,GAAkBT,OAAlB,CAA0B,IAA1B,EAAgC,EAAhC,CAAD,CAA1B;AACD;;AAED,eAAe7B,KAAf","sourcesContent":["let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\n\n\n/**\n * conversion ratios\n */\n\nparse.nanosecond =\nparse.ns = 1 / 1e6\n\nparse['µs'] =\nparse['μs'] =\nparse.us =\nparse.microsecond = 1 / 1e3\n\nparse.millisecond =\nparse.ms =\nparse[''] = 1\n\nparse.second =\nparse.sec =\nparse.s = parse.ms * 1000\n\nparse.minute =\nparse.min =\nparse.m = parse.s * 60\n\nparse.hour =\nparse.hr =\nparse.h = parse.m * 60\n\nparse.day =\nparse.d = parse.h * 24\n\nparse.week =\nparse.wk =\nparse.w = parse.d * 7\n\nparse.month =\nparse.b =\nparse.d * (365.25 / 12)\n\nparse.year =\nparse.yr =\nparse.y = parse.d * 365.25\n\n/**\n * convert `str` to ms\n *\n * @param {String} str\n * @param {String} format\n * @return {Number}\n */\n\nfunction parse(str='', format='ms'){\n  var result = null\n  // ignore commas/placeholders\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\n  var isNegative = str[0] === '-';\n  str.replace(durationRE, function(_, n, units){\n    units = unitRatio(units)\n    if (units) result = (result || 0) + Math.abs(parseFloat(n, 10)) * units\n  })\n\n  return result && ((result / (unitRatio(format) || 1)) * (isNegative ? -1 : 1))\n}\n\nfunction unitRatio(str) {\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\n}\n\nexport default parse\n"]},"metadata":{},"sourceType":"module"}