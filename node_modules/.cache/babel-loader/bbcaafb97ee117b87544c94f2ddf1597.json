{"ast":null,"code":"import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\n\nexport function concat(arrays, length) {\n  if (length == null) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  const output = allocUnsafe(length);\n  let offset = 0;\n\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return asUint8Array(output);\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA;;;;AAGA,OAAM,SAAUC,MAAV,CAAkBC,MAAlB,EAAoDC,MAApD,EAAmE;AACvE,MAAIA,MAAM,IAAI,IAAd,EAAoB;AAClBA,UAAM,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACH,MAAxC,EAAgD,CAAhD,CAAT;AACD;;AAED,QAAMI,MAAM,GAAGR,WAAW,CAACI,MAAD,CAA1B;AACA,MAAIK,MAAM,GAAG,CAAb;;AAEA,OAAK,MAAMC,GAAX,IAAkBP,MAAlB,EAA0B;AACxBK,UAAM,CAACG,GAAP,CAAWD,GAAX,EAAgBD,MAAhB;AACAA,UAAM,IAAIC,GAAG,CAACN,MAAd;AACD;;AAED,SAAOH,YAAY,CAACO,MAAD,CAAnB;AACD","names":["allocUnsafe","asUint8Array","concat","arrays","length","reduce","acc","curr","output","offset","arr","set"],"sources":["/home/legasi/nft-marketplace/node_modules/uint8arrays/src/concat.ts"],"sourcesContent":["import { allocUnsafe } from './alloc.js'\nimport { asUint8Array } from './util/as-uint8array.js'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nexport function concat (arrays: Array<ArrayLike<number>>, length?: number): Uint8Array {\n  if (length == null) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = allocUnsafe(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return asUint8Array(output)\n}\n"]},"metadata":{},"sourceType":"module"}